{"version":3,"file":"static/js/128.ba353ac7.chunk.js","mappings":"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","sources":["pages/Admin.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FaTooth, FaChevronLeft, FaChevronRight, FaTrashAlt } from 'react-icons/fa';\r\nimport { IoMdSettings } from \"react-icons/io\";\r\n\r\nexport default function Admin() {\r\n    const jwToken = localStorage.getItem('jwToken')\r\n    const [employees, setEmployees] = useState([])\r\n    const [settings, setSettings] = useState(false)\r\n    const [addNewEmployee, setAddNewEmployee] = useState(false)\r\n    const [previewImageUrl, setPreviewImageUrl] = useState(null);\r\n    const [message, setMessage] = useState(false)\r\n    //????????????????????????????????????????????????\r\n    const [numOfPage, setNumOfPage] = useState(1)\r\n    const numMaxOfPages = Math.ceil(employees.length / 10)\r\n    const numOfEmployeesPerPage = 10\r\n    const [infoEmployee, setInfoEmployee] = useState({})\r\n    const [edit, setEdit] = useState(false)\r\n    const [id, setId] = useState(null)\r\n    const [newData, setNewData] = useState({\r\n        id: '',\r\n        nume: '',\r\n        functie: '',\r\n        specialitate: '',\r\n        img: null\r\n    });\r\n    //Logout\r\n    const handleLogout = (event) => {\r\n        event.preventDefault();\r\n        localStorage.removeItem(\"jwToken\")\r\n        localStorage.removeItem(\"data\")\r\n        window.location.href = 'http://localhost:3000/luxsmile#/login'\r\n    }\r\n\r\n    // Get Employees by function\r\n    const getEmployees = async (functie) => {\r\n        if (jwToken) {\r\n            try {\r\n                const response = await fetch(`http://localhost:8080/angajati/${functie}`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ jwToken })\r\n                });\r\n                const data = await response.json();\r\n                if (data.message === 'jwToken este invalid') {\r\n                    window.location.href = 'http://localhost:3000/luxsmile#/login';\r\n                    return;\r\n                }\r\n                // Parcurgeți fiecare angajat și preluați imaginea\r\n                const employeesWithImages = await Promise.all(data.results.map(async employee => {\r\n                    const imgResponse = await fetch(`http://localhost:8080/src/database/img/${employee.img}`);\r\n                    if (!imgResponse.ok) {\r\n                        throw new Error('Nu s-a putut prelua imaginea');\r\n                    }\r\n                    const blob = await imgResponse.blob();\r\n                    const imageUrl = URL.createObjectURL(blob);\r\n                    return {\r\n                        ...employee,\r\n                        img: imageUrl\r\n                    };\r\n                }));\r\n                setEmployees(employeesWithImages);\r\n            } catch (error) {\r\n                console.error('Eroare la trimiterea tokenului la server:', error);\r\n            }\r\n        } else {\r\n            console.log('Nu există token în localStorage.');\r\n            window.location.href = 'http://localhost:3000/luxsmile#/login';\r\n        }\r\n    }\r\n\r\n    // Get all Employees\r\n    const getAllEmployees = async () => {\r\n        if (jwToken) {\r\n            try {\r\n                const response = await fetch(`http://localhost:8080/angajati`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ jwToken })\r\n                });\r\n                const data = await response.json();\r\n                if (data.message === 'jwToken este invalid') {\r\n                    window.location.href = 'http://localhost:3000/luxsmile#/login';\r\n                    return;\r\n                }\r\n                // Parcurgeți fiecare angajat și preluați imaginea\r\n                const employeesWithImages = await Promise.all(data.map(async employee => {\r\n                    const imgResponse = await fetch(`http://localhost:8080/src/database/img/${employee.img}`);\r\n                    if (!imgResponse.ok) {\r\n                        throw new Error('Nu s-a putut prelua imaginea');\r\n                    }\r\n                    const blob = await imgResponse.blob();\r\n                    const imageUrl = URL.createObjectURL(blob);\r\n                    return {\r\n                        ...employee,\r\n                        img: imageUrl\r\n                    };\r\n                }));\r\n                setEmployees(employeesWithImages);\r\n            } catch (error) {\r\n                console.error('Eroare la trimiterea tokenului la server:', error);\r\n            }\r\n        } else {\r\n            console.log('Nu există token în localStorage.');\r\n            window.location.href = 'http://localhost:3000/luxsmile#/login';\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const data = localStorage.getItem('data')\r\n        if (data === 'all') {\r\n            getAllEmployees()\r\n        } else if (data === 'Administratie') {\r\n            getEmployees('Administratie')\r\n        } else if (data === 'Medic Stomatolog') {\r\n            getEmployees('Medic Stomatolog')\r\n        } else if (data === 'Tehnician Dentar') {\r\n            getEmployees('Tehnician Dentar')\r\n        } else if (data === 'Asistent Medical') {\r\n            getEmployees('Asistent Medical')\r\n        }\r\n        setNumOfPage(localStorage.getItem('page'))\r\n    }, [])\r\n\r\n    // numOfPage minus\r\n    const getBack = () => {\r\n        if (Number(numOfPage) > 1) {\r\n            setNumOfPage(Number(numOfPage) - 1)\r\n            localStorage.setItem('page', (Number(numOfPage) - 1));\r\n        }\r\n\r\n    }\r\n    // numOfPage plus\r\n    const getNext = () => {\r\n        if (Number(numOfPage) < numMaxOfPages) {\r\n            setNumOfPage(Number(numOfPage) + 1)\r\n            localStorage.setItem('page', (Number(numOfPage) + 1));\r\n        }\r\n\r\n    }\r\n    const tenNewEmployees = employees.slice((numOfPage - 1) * numOfEmployeesPerPage, numOfPage * numOfEmployeesPerPage,)\r\n\r\n    const getEmployeesByPages = (param, param2) => {\r\n        param(param2);\r\n        localStorage.setItem('page', 1);\r\n    }\r\n    const numOfPageFromInput = (event) => {\r\n        const num = event.target.value\r\n        setNumOfPage(num)\r\n        localStorage.setItem('page', num)\r\n\r\n    }\r\n\r\n    //Settings\r\n    const openOneEmployee = (id) => {\r\n        const oneEmployee = tenNewEmployees.find(emp => emp.id === id)\r\n        setInfoEmployee(oneEmployee)\r\n        setNewData({ id: oneEmployee.id, nume: oneEmployee.nume, functie: oneEmployee.functie, specialitate: oneEmployee.specialitate })\r\n        setId(id)\r\n        setSettings(true)\r\n    }\r\n    //Edit datas\r\n    const handleChangeData = (event) => {\r\n        const { name, value } = event.target;\r\n        setNewData({\r\n            ...newData,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    // Edit a employee\r\n    const editEmployee = async () => {\r\n        if (jwToken) {\r\n            try {\r\n                const response = await fetch(`http://localhost:8080/angajati/edit/${newData.id}`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ jwToken, newData: { nume: newData.nume, specialitate: newData.specialitate, functie: newData.functie } })\r\n                });\r\n                const data = await response.json();\r\n                if (data.message === 'jwToken este invalid') {\r\n                    window.location.href = 'http://localhost:3000/luxsmile#/login';\r\n                    return;\r\n                }\r\n                window.location.reload()\r\n            } catch (error) {\r\n                console.error('Eroare la trimiterea tokenului la server:', error);\r\n            }\r\n        } else {\r\n            console.log('Nu există token în localStorage.');\r\n            window.location.href = 'http://localhost:3000/luxsmile#/login';\r\n        }\r\n    }\r\n\r\n    // Delete a employee\r\n    const deleteEmployee = async (id) => {\r\n        console.log(id)\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/angajati/delete/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({jwToken})\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => console.log(data))\r\n            window.location.reload()\r\n            if (!response.ok) {\r\n                throw new Error('Eroare la ștergere');\r\n            }\r\n\r\n            const data = await response.json();\r\n        } catch (error) {\r\n            console.error('Eroare la ștergere:', error);\r\n        }\r\n    }\r\n    // Add a new Employee Photo\r\n    const handleImageUpload = (event) => {\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n    \r\n        reader.onload = (e) => {\r\n          const imageUrl = e.target.result;\r\n          setPreviewImageUrl(imageUrl);\r\n          setNewData({img: imageUrl})\r\n        };\r\n    \r\n        reader.readAsDataURL(file);\r\n    };\r\n\r\n    //Send a new Employee\r\n    const sendNewEmployee = async() => {\r\n        var text = 'Adaugati: '\r\n        if(newData.img === null) {\r\n            text = text + 'imagine; '\r\n        }\r\n        if(newData.nume === '') {\r\n            text = text + 'nume; '\r\n        }\r\n        if(newData.functie === '') {\r\n            text = text + 'functie; '\r\n        }\r\n        if(newData.specialitate === '') {\r\n            text = text + 'specialitate; '\r\n        }\r\n        if(text === 'Adaugati: ') {\r\n            setMessage(false)\r\n            if (jwToken) {\r\n                try {\r\n                    const fileInput = document.getElementById('newImg');\r\n                    const file = fileInput.files[0]\r\n                    const newName = newData.specialitate + ' ' + newData.nume + '_' + newData.functie + '.jpg';\r\n                    const newFile = new File([file], newName, { type: \"image/jpg\" });\r\n                    const formData = new FormData();\r\n                    \r\n                    formData.append('img', newFile, newFile.newName)\r\n                    const response = await fetch(`http://localhost:8080/angajatNou`, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify({ jwToken, nume: newData.nume, functie: newData.functie, specialitate: newData.specialitate })\r\n                    });\r\n                    const data = await response.json();\r\n                    if (data.message === 'jwToken este invalid') {\r\n                        window.location.href = 'http://localhost:3000/luxsmile#/login';\r\n                        return;\r\n                    }\r\n                    const img = await fetch(`http://localhost:8080/upload`, {\r\n                        method: 'POST',\r\n                        body: formData\r\n                    });\r\n                    const imgResponse = await img.json();\r\n                    console.log(imgResponse)\r\n                    if(imgResponse.message === 'Imagine încărcată cu succes') {\r\n                        setMessage('A fost creat un angajat nou')\r\n                        setTimeout(() => {\r\n                            document.location.reload()\r\n                        }, 2000)\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Eroare la trimiterea tokenului la server:', error);\r\n                }\r\n            } else {\r\n                console.log('Nu există token în localStorage.');\r\n                window.location.href = 'http://localhost:3000/luxsmile#/login';\r\n            }\r\n        } else {\r\n            setMessage(text)\r\n        }\r\n    }\r\n    return (\r\n        <div className='admin'>\r\n            <header className='logo'>\r\n                <div className='boxLogo'>\r\n                    <FaTooth className='icon' />\r\n                    <h1>LuxSmile</h1>\r\n                </div>\r\n                <button onClick={handleLogout}>Log out</button>\r\n            </header>\r\n            <main>\r\n                <div className='tools'>\r\n                    <button className='tool' onClick={() => setAddNewEmployee(true)}>Adauga un angajat nou</button>\r\n                    <button className='tool' onClick={() => { getEmployeesByPages(getAllEmployees); setNumOfPage(1); localStorage.setItem(\"data\", \"all\") }}>Personal</button>\r\n                    <button className='subcategory' onClick={() => { getEmployeesByPages(getEmployees, 'Administratie'); setNumOfPage(1); localStorage.setItem(\"data\", \"Administratie\") }}>Administrație</button>\r\n                    <button className='subcategory' onClick={() => { getEmployeesByPages(getEmployees, 'Medic Stomatolog'); setNumOfPage(1); localStorage.setItem(\"data\", \"Medic Stomatolog\") }}>Medicii Stomatologi</button>\r\n                    <button className='subcategory' onClick={() => { getEmployeesByPages(getEmployees, 'Tehnician Dentar'); setNumOfPage(1); localStorage.setItem(\"data\", \"Tehnician Dentar\") }}>Tehnicieni Dentari</button>\r\n                    <button className='subcategory' onClick={() => { getEmployeesByPages(getEmployees, 'Asistent Medical'); setNumOfPage(1); localStorage.setItem(\"data\", \"Asistent Medical\") }}>Asistenți Medicali</button>\r\n                </div>\r\n                <div className='datas'>\r\n                    <table id='employees'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Imagine</th>\r\n                                <th>Nume</th>\r\n                                <th>Specialitate</th>\r\n                                <th>functie</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tenNewEmployees.map((employee) => {\r\n                                return (\r\n                                    <tr key={employee.id}>\r\n                                        <td>{employee.id}</td>\r\n                                        <td><img src={employee.img} alt={employee.img} />{ }</td>\r\n                                        <td>{employee.nume}</td>\r\n                                        <td>{employee.specialitate}</td>\r\n                                        <td>{employee.functie}</td>\r\n                                        <td><IoMdSettings className='icon' onClick={() => openOneEmployee(employee.id)} /> <FaTrashAlt className='icon' onClick={() => deleteEmployee(employee.id)} /></td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className='page'>\r\n                        <div>\r\n                            <button onClick={() => { getBack() }}><FaChevronLeft className='icon' /></button>\r\n                            <input type='number' value={numOfPage} min={1} max={numMaxOfPages} onChange={numOfPageFromInput} />\r\n                            <button onClick={() => { getNext() }}><FaChevronRight className='icon' /></button>\r\n                        </div>\r\n                        <p>Numarul maxim de pagini: {numMaxOfPages}</p>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n            {settings && <div className='infoEmployeeBox'>\r\n                <div className='infoEmployee'>\r\n                    <img src={infoEmployee.img} alt='Employee img' />\r\n                    <div className='info'>\r\n                        <input type='file' accept=\"image/*\" />\r\n                        <p>Nume: {infoEmployee.nume}</p>\r\n                        {edit && <input type='text' name='nume' onChange={handleChangeData} placeholder={infoEmployee.nume} />}\r\n                        <p>Functie: {infoEmployee.functie}</p>\r\n                        {edit && <select defaultValue={infoEmployee.functie} name='functie' onChange={handleChangeData}>\r\n                            <option value={'Administratie'}>Administratie</option>\r\n                            <option value={'Medic Stomatolog'}>Medic Stomatolog</option>\r\n                            <option value={'Tehnician Dentar'}>Tehnician Dentar</option>\r\n                            <option value={'Asistent Medical'}>Asistent Medical</option>\r\n                        </select>}\r\n                        <p>Specialitate: {infoEmployee.specialitate}</p>\r\n                        {edit && <input type='text' name='specialitate' onChange={handleChangeData} placeholder={infoEmployee.specialitate} />}\r\n                        <button onClick={() => { setSettings(false); setEdit(false); document.location.reload() }}>Inchide</button>\r\n                        <button onClick={() => setEdit(true)}>Editeza</button>\r\n                        {edit && <button onClick={editEmployee}>Trimite</button>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n            {addNewEmployee && <div className='addNewEmployee'>\r\n                <div className='employeeData'>\r\n                    <div className='addData'>\r\n                        <div>\r\n                            {message && <p className='alert'>{message}</p>}\r\n                            <p>Imagine:</p>\r\n                            <input id='newImg' type='file' accept=\"image/*\" name='img' onChange={handleImageUpload} />\r\n                            <p>Nume: </p>\r\n                            <input id='newName' type='text' name='nume' onChange={handleChangeData} placeholder='Numele Prenume' />\r\n                            <p>Functie</p>\r\n                            <select id='newFunction' name='functie' defaultValue={'Selecteaza Functia'} onChange={handleChangeData}>\r\n                                <option value={'Selecteaza Functia'}>Selecteaza Functia</option>\r\n                                <option value={'Administratie'}>Administratie</option>\r\n                                <option value={'Medic Stomatolog'}>Medic Stomatolog</option>\r\n                                <option value={'Tehnician Dentar'}>Tehnician Dentar</option>\r\n                                <option value={'Asistent Medical'}>Asistent Medical</option>\r\n                            </select>\r\n                            <p>Specialitate</p>\r\n                            <input id='newSpecialty' type='text' name='specialitate' onChange={handleChangeData} placeholder='Specialitate' />\r\n                        </div>\r\n                        {previewImageUrl && <img src={previewImageUrl} alt=\"Preview\" />}\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={sendNewEmployee}>Salveaza</button>\r\n                        <button onClick={() => {setAddNewEmployee(false); window.location.reload()}}>Renunta</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n                    \r\n                \r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n"],"names":["Admin","jwToken","localStorage","getItem","employees","setEmployees","useState","settings","setSettings","addNewEmployee","setAddNewEmployee","previewImageUrl","setPreviewImageUrl","message","setMessage","numOfPage","setNumOfPage","numMaxOfPages","Math","ceil","length","infoEmployee","setInfoEmployee","edit","setEdit","id","setId","newData","setNewData","nume","functie","specialitate","img","getEmployees","async","response","fetch","concat","method","headers","body","JSON","stringify","data","json","window","location","href","employeesWithImages","Promise","all","results","map","imgResponse","employee","ok","Error","blob","imageUrl","URL","createObjectURL","error","console","log","getAllEmployees","useEffect","tenNewEmployees","slice","getEmployeesByPages","param","param2","setItem","handleChangeData","event","name","value","target","_jsxs","className","children","_jsx","FaTooth","onClick","preventDefault","removeItem","src","alt","IoMdSettings","oneEmployee","find","emp","openOneEmployee","FaTrashAlt","then","res","reload","deleteEmployee","Number","FaChevronLeft","type","min","max","onChange","num","FaChevronRight","accept","placeholder","defaultValue","document","file","files","reader","FileReader","onload","e","result","readAsDataURL","text","getElementById","newName","newFile","File","formData","FormData","append","setTimeout"],"sourceRoot":""}